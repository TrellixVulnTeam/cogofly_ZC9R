# Generated by Django 2.2.4 on 2019-08-09 19:43

import app.models.date_partial_field
import app.models.generic
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_markdown.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('activite', models.IntegerField(choices=[(0, 'has a new relationship:'), (1, 'has a new travel:'), (2, "has changed a travel, it's now:"), (3, "Cogofly's news"), (4, 'has made a comment:'), (5, 'has made a testimony:'), (6, 'has expressed this:')], default=0)),
                ('date_publication', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created')),
            ],
            options={
                'ordering': ['-date_publication', '-date_last_modif'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('label', models.CharField(blank=True, default=None, help_text='A recall of what this blog contains (language independant)', max_length=200, null=True, verbose_name='Label')),
                ('date_publication', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='Publication date')),
                ('ordre_si_top', models.IntegerField(blank=True, default=None, help_text='Priority: the higher first ("2" is <b>before</b> "1" and so on...).<br /><b>Let it blank if you don\'t want this blog on top</b>', null=True, verbose_name='If this blog is always on top')),
                ('date_envoi_newsletter', models.DateField(blank=True, default=None, help_text='Blank = never sent. If the date is older than now it will be sent tonight.', null=True, verbose_name='Add this blog into the newsletter')),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Langue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('nom', models.CharField(max_length=50)),
                ('nom_local', models.CharField(default='', max_length=50)),
                ('locale', models.CharField(max_length=2)),
                ('bidirectionnel', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Languages',
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Personne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('site_web', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('is_beta_tester', models.BooleanField(default=False)),
                ('newsletter_configuration', models.IntegerField(blank=True, choices=[(1, 'Every day'), (2, 'Every week'), (3, 'Every month'), (4, 'Never send newsletter')], default=2, null=True)),
                ('newsletter_date_sent', models.DateTimeField(blank=True, default=None, null=True)),
                ('sexe', models.IntegerField(blank=True, choices=[(1, 'Male'), (2, 'Female')], default=None, null=True)),
                ('nb_enfants', models.IntegerField(blank=True, default=0)),
                ('custom_zodiac_sign', models.IntegerField(blank=True, choices=[(12, 'Not precised'), (0, 'Capricorn'), (1, 'Aquarius'), (2, 'Pisces'), (3, 'Aries'), (4, 'Taurus'), (5, 'Gemini'), (6, 'Cancer'), (7, 'Leo'), (8, 'Virgo'), (9, 'Libra'), (10, 'Scorpio'), (11, 'Sagittarius')], default=None, null=True)),
                ('statut', models.IntegerField(blank=True, choices=[(0, 'Solo')], default=0, null=True)),
                ('est_fumeur', models.IntegerField(blank=True, choices=[(3, 'Not precised'), (0, 'Non-smoker'), (1, 'Smoker'), (2, 'Social smoker')], default=None, null=True)),
                ('est_physique', models.BooleanField(default=True)),
                ('est_active', models.BooleanField(default=True)),
                ('est_detruit', models.DateTimeField(blank=True, default=None, null=True)),
                ('reason_delete', models.TextField(blank=True, default=None, null=True)),
                ('reactivate_code', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('one_click_login', models.BooleanField(default=False)),
                ('confirmation_code', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('temporary_visible_password', models.CharField(blank=True, default='', max_length=200)),
                ('reset_password', models.DateTimeField(blank=True, default=None, null=True)),
                ('champs_supplementaires', models.TextField(blank=True, default=None, null=True)),
                ('date_naissance', models.DateField(blank=True, default=None, null=True, verbose_name='Birth date')),
                ('langue', models.IntegerField(blank=True, choices=[(0, 'Albanian'), (1, 'German'), (2, 'English'), (3, 'Arabic'), (4, 'Armenian'), (5, 'Bengali'), (6, 'Catalan'), (7, 'Chinese'), (8, 'Korean'), (9, 'Croatian'), (10, 'Danish'), (11, 'Spanish'), (12, 'Finnish'), (13, 'French'), (14, 'Greek'), (15, 'Hungarian'), (16, 'Italian'), (17, 'Malaysian'), (18, 'Mongolian'), (19, 'Dutch'), (20, 'Occitan'), (21, 'Persian'), (22, 'Portuguese'), (23, 'Romanian'), (24, 'Russian'), (25, 'Serbian'), (26, 'Slovakian'), (27, 'Slovenian'), (28, 'Swedish'), (29, 'Turkish'), (30, 'Other')], default=None, null=True)),
                ('niveau_etudes', models.IntegerField(blank=True, choices=[(10, 'Not precised'), (0, 'Nursery school'), (1, 'Primary education'), (2, 'Lower secondary education'), (3, 'Upper secondary education'), (4, 'Post-secondary non-tertiary education'), (5, 'Short-cycle tertiary education'), (6, "Bachelor's Degree or equivalent level"), (7, "Master's Degree or equivalent level"), (8, 'Ph.D. or equivalent level'), (9, 'Other')], default=None, null=True)),
                ('profession', models.IntegerField(blank=True, choices=[(25, 'Not precised'), (0, 'Farmer'), (1, 'Craftsman'), (2, 'Artist'), (3, 'Manager'), (4, 'Driver'), (5, 'Chief Executive Officer'), (6, 'Clergyman'), (7, 'Independent retailer'), (8, 'Foreman, supervisor'), (9, 'Managing director'), (10, 'Employee'), (11, 'Student'), (12, 'Civil servant'), (13, 'Engineer'), (14, 'Primary schoolteacher'), (15, 'Labourer'), (16, 'Policeman or Soldier'), (17, 'Teacher'), (18, 'Self-employed profession'), (19, 'Pensioner'), (20, 'Sportsman'), (21, 'Technician'), (22, 'Undisclosed'), (23, 'Unemployed'), (24, 'Other')], default=None, null=True)),
                ('how_did_i_know_cogofly', models.IntegerField(blank=True, choices=[(1, 'Facebook'), (2, 'Google'), (3, 'Google Plus'), (4, 'Twitter'), (5, 'Flyers'), (6, 'Word of mouth'), (7, 'Other')], default=None, null=True)),
                ('niveau_visibilite', models.IntegerField(blank=True, choices=[(1, 'Everyone can see those informations'), (2, 'Only my friends can see those informations'), (3, 'Only me can see those informations')], default=1, null=True)),
                ('age_visible', models.BooleanField(default=True)),
                ('nb_enfants_visible', models.BooleanField(default=True)),
                ('langue_visible', models.BooleanField(default=True)),
                ('langues2_visible', models.BooleanField(default=True)),
                ('niveau_etudes_visible', models.BooleanField(default=True)),
                ('programme_visible', models.BooleanField(default=True)),
                ('employer_current_visible', models.BooleanField(default=True)),
                ('employer_previous_visible', models.BooleanField(default=True)),
                ('profession_visible', models.BooleanField(default=True)),
                ('activite_visible', models.BooleanField(default=True)),
                ('hobbies_visible', models.BooleanField(default=True)),
                ('conduite_visible', models.BooleanField(default=True)),
                ('personnalite_visible', models.BooleanField(default=True)),
                ('est_fumeur_visible', models.BooleanField(default=True)),
                ('custom_zodiac_sign_visible', models.BooleanField(default=True)),
                ('self_description_visible', models.BooleanField(default=True)),
                ('self_description', models.TextField(blank=True, null=True, verbose_name='Describe yourself')),
            ],
            options={
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
            bases=(app.models.generic.PictureURL, models.Model),
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('fichier_origine', models.CharField(blank=True, default=None, help_text="It's filled when someone adds a trip picture, you should not touch it", max_length=200, null=True)),
                ('image', models.ImageField(null=True, upload_to='')),
            ],
            options={
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
            bases=(app.models.generic.PictureURL, models.Model),
        ),
        migrations.CreateModel(
            name='Publicite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('position', models.IntegerField(blank=True, choices=[(1, 'Ads travels right'), (2, 'Ads travels left'), (3, 'Ads my profile left'), (4, 'Ads my profile right'), (5, 'Ads news left'), (6, 'Ads news right')], default=None, help_text='Where this ads goes', null=True, verbose_name='Where this ads goes')),
                ('label', models.CharField(blank=True, default=None, help_text='A recall of what this ads contains (language independant)', max_length=200, null=True, verbose_name='Label')),
                ('date_publication', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='Publication date')),
                ('ordre_si_top', models.IntegerField(blank=True, default=None, help_text='Priority: the lowest the higher ("1" is <b>before</b> "2" and so on...).', null=True, verbose_name='How this ad appears')),
            ],
            options={
                'verbose_name': 'Ad',
                'verbose_name_plural': 'Ads',
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TagBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('type_tag', models.IntegerField(blank=True, choices=[(1, 'Subjects'), (2, 'Activity sectors'), (3, 'Hobbies'), (4, 'Driving licences'), (5, 'Personality'), (6, 'Language'), (7, 'Google maps')], default=None, null=True)),
                ('poids', models.IntegerField(blank=True, default=None, help_text='Used for ordering', null=True)),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'Referent tag',
                'verbose_name_plural': 'Referent tags',
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        # migrations.CreateModel(
        #     name='MessageThrough',
        #     fields=[
        #     ],
        #     options={
        #         'proxy': True,
        #         'indexes': [],
        #         'constraints': [],
        #     },
        #     bases=('app.conversation_messages',),
        # ),
        # migrations.CreateModel(
        #     name='PersonneThrough',
        #     fields=[
        #     ],
        #     options={
        #         'proxy': True,
        #         'indexes': [],
        #         'constraints': [],
        #     },
        #     bases=('app.conversation_personnes',),
        # ),
        migrations.CreateModel(
            name='TagGoogleMaps',
            fields=[
                ('tagbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.TagBase')),
                ('place_id', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=10, default=None, max_digits=19, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=10, default=None, max_digits=19, null=True)),
                ('viewport_northeast_lat', models.DecimalField(blank=True, decimal_places=10, default=None, max_digits=19, null=True)),
                ('viewport_northeast_lng', models.DecimalField(blank=True, decimal_places=10, default=None, max_digits=19, null=True)),
                ('viewport_southwest_lat', models.DecimalField(blank=True, decimal_places=10, default=None, max_digits=19, null=True)),
                ('viewport_southwest_lng', models.DecimalField(blank=True, decimal_places=10, default=None, max_digits=19, null=True)),
            ],
            options={
                'verbose_name': 'Tag google maps referent',
                'verbose_name_plural': 'Tags google maps referents',
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
            bases=('app.tagbase',),
        ),
        migrations.CreateModel(
            name='Texte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('texte', models.CharField(max_length=200)),
                ('langue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.Langue')),
            ],
            options={
                'verbose_name': 'Text',
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TagWithValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('type_tag', models.CharField(choices=[('0', 'Company'), ('1', 'Job'), ('2', 'Language'), ('3', 'Google maps'), ('4', 'Driving licences'), ('5', 'Diploma'), ('6', 'Point of interest'), ('7', 'Hobby')], default='0', max_length=1)),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('value', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('langue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.Langue')),
            ],
            options={
                'verbose_name': 'Tag with an associated value',
                'verbose_name_plural': 'Tags with an associated value',
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TagTraduit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('value', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('langue', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Langue')),
                ('tag', models.ForeignKey(blank=True, default=None, help_text="It's the master tag", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag', to='app.TagBase')),
            ],
            options={
                'verbose_name': 'Tag translated from a referent tag',
                'verbose_name_plural': 'Tags translated',
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TagGoogleMapsTraduit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('formatted_address', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('langue', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Langue')),
                ('tag_google_maps', models.ForeignKey(blank=True, default=None, help_text='Position de référence', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_google_maps', to='app.TagGoogleMaps')),
            ],
            options={
                'verbose_name': 'Tag google maps of a place in a language',
                'verbose_name_plural': 'Tags google maps of a place in a language',
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('type_tag', models.CharField(choices=[('0', 'Company'), ('1', 'Job'), ('2', 'Language'), ('3', 'Google maps'), ('4', 'Driving licences'), ('5', 'Diploma'), ('6', 'Point of interest'), ('7', 'Hobby')], default='0', max_length=1)),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('langue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.Langue')),
            ],
            options={
                'verbose_name': 'Tag',
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PubliciteTraduit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('locale', models.CharField(blank=True, default=None, help_text='Ads locale (en, fr, ...)', max_length=2, null=True, verbose_name='Ads locale')),
                ('title', models.CharField(blank=True, default=None, help_text='Ads title', max_length=200, null=True, verbose_name='Title')),
                ('content', django_markdown.models.MarkdownField(blank=True, default=None, help_text='Ads content', null=True, verbose_name='Content')),
                ('publicite', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Publicite')),
            ],
            options={
                'verbose_name': 'Ads-translated content',
                'verbose_name_plural': 'Ads-translated',
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonneTypepermis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Personne', verbose_name='Person')),
                ('type_permis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.TagTraduit', verbose_name='Licence')),
            ],
            options={
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonneTravel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('date_start', app.models.date_partial_field.DatePartialField(blank=True, default=None, null=True, verbose_name='Start (m/d/Y)')),
                ('date_end', app.models.date_partial_field.DatePartialField(blank=True, default=None, null=True, verbose_name='End (m/d/Y)')),
                ('is_past', models.BooleanField(blank=True, default=False, verbose_name='This is a past travel')),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Personne', verbose_name='Person')),
                ('photo1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photo1', to='app.Photo', verbose_name='Travel picture 1')),
                ('photo2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photo2', to='app.Photo', verbose_name='Travel picture 2')),
                ('photo3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photo3', to='app.Photo', verbose_name='Travel picture 3')),
                ('travel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.TagGoogleMapsTraduit', verbose_name='Travel')),
            ],
            options={
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonneSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Personne', verbose_name='Person')),
                ('search', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.TagGoogleMapsTraduit', verbose_name='Search')),
            ],
            options={
                'verbose_name': 'Person / search',
                'verbose_name_plural': 'Person / searches',
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonneRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('type_relation', models.IntegerField(choices=[(0, 'friend'), (1, 'relationship'), (3, 'invitation refused'), (2, 'sent an invitation'), (4, 'parent / child'), (5, 'child / parent'), (6, 'husband / wife'), (7, 'wife / husband'), (8, 'teacher / student'), (9, 'student / teacher'), (10, 'remover / removed')], default=0)),
                ('is_reverse', models.BooleanField(default=False)),
                ('raison_refus', models.IntegerField(blank=True, choices=[(1, 'No'), (2, 'No thank you'), (3, 'Maybe another time'), (4, 'I am quite simply not interested'), (5, 'We are quite simply not interested'), (6, 'I am not interested for now'), (7, 'We are not interested for now'), (8, 'I don’t travel'), (9, 'We don’t travel'), (10, 'I don’t travel around'), (11, 'We don’t travel around'), (12, 'I prefer to remain alone'), (13, 'We prefer to remain alone'), (14, 'We have no travel plans in common'), (15, 'We have no ideas in common for trips out'), (16, 'We have nothing in common in terms of activities'), (17, 'I don’t speak your language'), (18, 'We don’t speak your language'), (19, 'I don’t speak English'), (20, 'We don’t speak English'), (21, 'I invite you to use my contacts'), (22, 'We invite you to get in touch with our contacts'), (23, 'I invite you to contact another contact'), (24, 'We invite you to contact another person'), (25, 'I invite you to contact me by private message'), (26, 'We invite you to contact us by private message')], default=2, null=True)),
                ('dst', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relation_dst', to='app.Personne')),
                ('opposite', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.PersonneRelation')),
                ('src', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relation_src', to='app.Personne')),
            ],
            options={
                'verbose_name': 'Relation',
                'verbose_name_plural': 'Relations',
            },
        ),
        migrations.CreateModel(
            name='PersonneProgramme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Personne', verbose_name='Person')),
                ('programme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.TagTraduit', verbose_name='Subject')),
            ],
            options={
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonnePhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('photo_type', models.IntegerField(choices=[(0, 'Profil'), (1, 'Travel'), (2, 'Banner'), (3, 'Blog'), (4, 'Advert')], default=0)),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Personne', verbose_name='Person')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Photo', verbose_name='Picture')),
            ],
            options={
                'verbose_name': 'Person / photo',
                'verbose_name_plural': 'Person / photos',
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
            bases=(app.models.generic.PictureURL, models.Model),
        ),
        migrations.CreateModel(
            name='PersonnePersonnalite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('personnalite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.TagTraduit', verbose_name='Personality')),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Personne', verbose_name='Person')),
            ],
            options={
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonneLiked',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('liked', models.BooleanField(default=True)),
                ('viewed', models.BooleanField(default=False)),
                ('activite', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='liked_activite', to='app.Activite')),
                ('dst', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_dst', to='app.Personne')),
                ('src', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_src', to='app.Personne')),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
            },
        ),
        migrations.CreateModel(
            name='PersonneLangue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('langue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.TagTraduit', verbose_name='Language')),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Personne', verbose_name='Person')),
            ],
            options={
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonneHobby',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('hobby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.TagTraduit', verbose_name='Hobby')),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Personne', verbose_name='Person')),
            ],
            options={
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonneBlogNewsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('date_sent', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Sent')),
                ('blog', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Blog', verbose_name='Blog')),
                ('personne', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Personne', verbose_name='To')),
            ],
            options={
                'ordering': ['-date_last_modif', '-date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonneActiviteNewsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('date_sent', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Sent')),
                ('activite', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Activite', verbose_name='Activity')),
                ('personne', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Personne', verbose_name='To')),
            ],
            options={
                'ordering': ['-date_last_modif', '-date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonneActivite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('activite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.TagTraduit', verbose_name='Activity sector')),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Personne', verbose_name='Person')),
            ],
            options={
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='personne',
            name='activites2',
            field=app.models.generic.ManyToManyStillValid(blank=True, default=None, related_name='personne_activite', through='app.PersonneActivite', to='app.TagTraduit'),
        ),
        migrations.AddField(
            model_name='personne',
            name='employer_current',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employer_current_tag', to='app.Tag', verbose_name='Current employer'),
        ),
        migrations.AddField(
            model_name='personne',
            name='employer_previous',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employer_previous_tag', to='app.Tag', verbose_name='Previous employer'),
        ),
        migrations.AddField(
            model_name='personne',
            name='hobbies2',
            field=app.models.generic.ManyToManyStillValid(blank=True, default=None, related_name='personne_hobby', through='app.PersonneHobby', to='app.TagTraduit'),
        ),
        migrations.AddField(
            model_name='personne',
            name='langues2',
            field=app.models.generic.ManyToManyStillValid(blank=True, default=None, related_name='personne_langue', through='app.PersonneLangue', to='app.TagTraduit'),
        ),
        migrations.AddField(
            model_name='personne',
            name='liked',
            field=models.ManyToManyField(related_name='personne_liked', through='app.PersonneLiked', to='app.Personne'),
        ),
        migrations.AddField(
            model_name='personne',
            name='personnalites2',
            field=app.models.generic.ManyToManyStillValid(blank=True, default=None, related_name='personne_personnalite', through='app.PersonnePersonnalite', to='app.TagTraduit'),
        ),
        migrations.AddField(
            model_name='personne',
            name='photos',
            field=models.ManyToManyField(blank=True, related_name='parent', through='app.PersonnePhoto', to='app.Photo'),
        ),
        migrations.AddField(
            model_name='personne',
            name='place_i_live',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='place_i_live_tag', to='app.Tag', verbose_name='City where I live'),
        ),
        migrations.AddField(
            model_name='personne',
            name='place_of_birth',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='place_of_birth_tag', to='app.Tag', verbose_name='Place of birth'),
        ),
        migrations.AddField(
            model_name='personne',
            name='programmes2',
            field=app.models.generic.ManyToManyStillValid(blank=True, default=None, related_name='personne_programme', through='app.PersonneProgramme', to='app.TagTraduit'),
        ),
        migrations.AddField(
            model_name='personne',
            name='relations',
            field=models.ManyToManyField(related_name='personne_relations', through='app.PersonneRelation', to='app.Personne'),
        ),
        migrations.AddField(
            model_name='personne',
            name='site_language',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='site_language', to='app.Langue', verbose_name='Language chosen in the website'),
        ),
        migrations.AddField(
            model_name='personne',
            name='travels',
            field=models.ManyToManyField(blank=True, default=None, related_name='personne_travel', through='app.PersonneTravel', to='app.TagGoogleMapsTraduit'),
        ),
        migrations.AddField(
            model_name='personne',
            name='types_permis2',
            field=app.models.generic.ManyToManyStillValid(blank=True, default=None, related_name='personne_typepermis', through='app.PersonneTypepermis', to='app.TagTraduit'),
        ),
        migrations.AddField(
            model_name='personne',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('is_read', models.BooleanField(default=False)),
                ('message', models.TextField(blank=True, null=True, verbose_name='Messages')),
                ('dst_message_unread_notified', models.DateTimeField(default=None, null=True, verbose_name='Destination is notified by mail')),
                ('src_visible', models.BooleanField(blank=True, default=True, verbose_name='Visible by src')),
                ('dst_visible', models.BooleanField(blank=True, default=True, verbose_name='Visible by dst')),
                ('dst', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_dst', to='app.Personne')),
                ('src', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_src', to='app.Personne')),
            ],
            options={
                'ordering': ['date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('messages', models.ManyToManyField(related_name='conversations', to='app.Message')),
                ('personnes', models.ManyToManyField(related_name='conversations', to='app.Personne')),
            ],
            options={
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlogTraduit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('locale', models.CharField(blank=True, default=None, help_text="Blog's locale (en, fr, ...)", max_length=2, null=True, verbose_name="Blog's locale")),
                ('title', models.CharField(blank=True, default=None, help_text="Blog's title", max_length=200, null=True, verbose_name='Title')),
                ('content', django_markdown.models.MarkdownField(blank=True, default=None, help_text="Blog's content", null=True, verbose_name='Content')),
                ('blog', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Blog')),
            ],
            options={
                'verbose_name': 'Blog-translated content',
                'verbose_name_plural': 'Blogs-translated',
                'ordering': ['date_v_debut'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActiviteTestimony',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('testimony', models.TextField(blank=True, null=True, verbose_name='Testimony')),
                ('testimony_show_name', models.BooleanField(default=False, help_text='Shows the name and profile picture inside the testimony page', verbose_name='Show name and picture')),
                ('validated_by_moderator', models.BooleanField(default=False)),
                ('personne', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personne_testimony', to='app.Personne')),
            ],
            options={
                'verbose_name': 'Activity / testimony',
                'verbose_name_plural': 'Activities / testimonies',
                'ordering': ['-date_last_modif'],
            },
        ),
        migrations.CreateModel(
            name='ActiviteShared',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('activite', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Activite', verbose_name='Activity sector')),
                ('dst', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shared_to', to='app.Personne', verbose_name='Shared to')),
                ('src', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shared_by', to='app.Personne', verbose_name='Shared by')),
            ],
            options={
                'ordering': ['-date_last_modif'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActiviteExpressyourself',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('message', models.TextField(blank=True, null=True, verbose_name='Message')),
                ('personne', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personne_expressyourself', to='app.Personne')),
            ],
            options={
                'verbose_name': 'Activity / express yourself',
                'verbose_name_plural': 'Activities / express yourself',
                'ordering': ['-date_last_modif'],
            },
        ),
        migrations.CreateModel(
            name='ActiviteComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_modif', models.DateTimeField(auto_now=True, verbose_name='Last changed')),
                ('date_v_debut', models.DateTimeField(default=django.utils.timezone.now, verbose_name='V. start')),
                ('date_v_fin', models.DateTimeField(blank=True, default=None, null=True, verbose_name='V. end')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('activite_dst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Activite')),
                ('personne', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personne_comment', to='app.Personne')),
            ],
            options={
                'verbose_name': 'Activity / comment',
                'verbose_name_plural': 'Activities / comments',
                'ordering': ['-date_last_modif'],
            },
        ),
        migrations.AddField(
            model_name='activite',
            name='blog_traduit',
            field=models.ForeignKey(blank=True, default=None, help_text='Blog translated', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.BlogTraduit', verbose_name='Blog translated'),
        ),
        migrations.AddField(
            model_name='activite',
            name='comment',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activite', to='app.ActiviteComments'),
        ),
        migrations.AddField(
            model_name='activite',
            name='express_yourself',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activite', to='app.ActiviteExpressyourself'),
        ),
        migrations.AddField(
            model_name='activite',
            name='relation',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.PersonneRelation', verbose_name='Relationship'),
        ),
        migrations.AddField(
            model_name='activite',
            name='testimony',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activite', to='app.ActiviteTestimony'),
        ),
        migrations.AddField(
            model_name='activite',
            name='travel',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.PersonneTravel', verbose_name='Travel'),
        ),
    ]
