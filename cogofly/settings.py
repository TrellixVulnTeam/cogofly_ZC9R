# coding=UTF-8
"""
Django settings for cogofly project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Avant toute chose : mettre l'import "signals" pour être sûr qu'ils sont
# appliqués sinon il peut arriver des cas où ça ne fonctionne pas
# https://docs.djangoproject.com/fr/
# 1.8/topics/signals/#connecting-receiver-functions

import datetime
from importlib import reload
import django.db.models.signals
from django.utils.translation import ugettext_lazy as _
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import re
import six.moves.urllib.request, six.moves.urllib.error, six.moves.urllib.parse
import sys

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.append(BASE_DIR+'/third_party/defusedxml-0.4.1')
sys.path.append(BASE_DIR+'/third_party/python-openid_2_2_5')
sys.path.append(BASE_DIR+'/third_party/google_appengine_1_9_25')
sys.path.append(BASE_DIR+'/third_party/authomatic_0_1_0')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '5a%xdb3@*hwzpvs$1a4o5px^y(*vldr#s6ntzy#eqri599^&)i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = [
    'development.cogofly.com:8000',
    'localhost:8000',
    'localhost',
    '.cogofly.com',
    '.cogofly.fr',
    '127.0.0.1',
]

# --------------------
# production mode:
# DEBUG = False, hard-coded:
if os.path.realpath(os.path.curdir) == '/srv/apps/cogofly/cogofly-website-prod/cogofly-website.webapp.prod/apps/main':
    DEBUG = False
    ADMINS = (
        ('Franck Lagathu', 'cogofly+admin@gmail.com'),
    )
    SERVER_EMAIL = 'no-reply@cogofly.com'
    DEFAULT_FROM_EMAIL = 'contact@cogofly.com'
    # Si on le laisse ça fait tout péter :
    # utilisé uniquement si on fait du https :
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    HTTPS = "on"
    IGNORABLE_404_URLS = (
        re.compile(r'\.(php|cgi)$'),
        re.compile(r'.*phpmyadmin.*'),
        re.compile(r'^/apple-touch-icon.*\.png$'),
        re.compile(r'^/favicon\.ico$'),
        re.compile(r'^/robots\.txt$'),
    )
    print(("-" * 80))
    print("Production")
else:
    # display mails into the console instead of sending them:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
    EMAIL_HOST = 'localhost'
    EMAIL_PORT = 1025
# fin mode production
# --------------------
# ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

# Where admins are redirected to after hijacking a user
HIJACK_LOGIN_REDIRECT_URL = '/fr/chez-moi'
# Where admins are redirected to after releasing a user
HIJACK_LOGOUT_REDIRECT_URL = '/admin/auth/user/'
HIJACK_ALLOW_GET_REQUESTS = True

# Mon middleware pour rediriger si compte désactivé
URL_REDIRECT_USER_NOT_ACTIVE = 'my_home_profile_account_desactivated'
URL_REDIRECT_USER_DELETED = 'my_home_profile_account_deleted'
URL_REDIRECT_USER_PROFILE_NOT_COMPLETE = 'my_home_profile_not_complete'


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'hijack',
    'hijack_admin',
    'axes',
    'app',
    'applancement',
    'compressor',
    'django_markdown',
    'url_tools',
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
'django.middleware.locale.LocaleMiddleware',
    'axes.middleware.AxesMiddleware',

]

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'third_party.hqf_middleware.RedirectIfUserIsNotActiveMiddleware',
    'third_party.hqf_middleware.RedirectIfUserProfilNotCompleteMiddleware',
    'third_party.hqf_middleware.ForceDefaultLanguageMiddleware',
    'third_party.hqf_middleware.CheckIfLanguageChangedMiddleware',
)

ROOT_URLCONF = 'cogofly.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'url_tools.context_processors.current_url',
                'django.template.context_processors.i18n',
            ],
            # De stackoverflow : "It is a good practice to make sure the value
            # of TEMPLATE_DEBUG is the same as DEBUG
            'debug': DEBUG,
        },
    },
]

WSGI_APPLICATION = 'cogofly.wsgi.application'


# Création de mon propre modèle d'authentification
# https://docs.djangoproject.com/fr/1.8/topics/auth/customizing/
AUTHENTICATION_BACKENDS = (
    # 'axes.backends.AxesBackend',
    'django.contrib.auth.backends.ModelBackend',
    'cogofly.backends.ModelBackendOnlyEmail',

)

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/fr/1.8/topics/i18n/
# LANGUAGE_CODE = 'fr-fr'
# TIME_ZONE = 'Europe/Paris'
LANGUAGE_CODE = 'en'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# USE_I18N = True

_ = lambda s: s

LANGUAGES = (
    ('fr', _('French')),
    ('en', _('English')),
    ('hi', _('Hindi')),
    ('zh_CN', _('Chinese')),
    ('es', _('Spanish')),
    ('de', _('German')),
    ('it', _('Italian')),
    ('pt_PT', _('Portuguese')),
    ('ru', _('Russian')),
    ('ja', _('Japanese')),
    ('ko', _('Korean')),
    ('vi', _('Vietnamese'))
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static/extern_base_templates/SB Admin 2"),
    os.path.join(BASE_DIR, "static/extern_base_templates/placecomplete"),
    os.path.join(BASE_DIR, "static/extern_base_templates/select2/dist"),
    os.path.join(BASE_DIR, "static/common"),
)

# Aahahaha -> merci stackoverflow !
# https://docs.djangoproject.com/en/1.8/ref/settings/#append-slash
APPEND_SLASH = True

# Le truc de malade qu'il fallait trouver pour que la traduction soit
# prise en compte :
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)
# Là où les fichiers seront "téléversés"
MEDIA_ROOT = os.path.join(BASE_DIR, 'uploads')
STATIC_ROOT = os.path.join(BASE_DIR, 'static/production')
COMPRESS_ROOT = os.path.join(BASE_DIR, 'static')

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
)
COMPRESS_JS_FILTERS = [
    'compressor.filters.template.TemplateFilter',
]
COMPRESS_ENABLED = True

CORS_ALLOW_ALL_ORIGIN = False
CORS_ALLOW_ORIGIN = '*'
CORS_ALLOW_CREDENTIALS = 'true'
CORS_ALLOW_METHODS = ('GET', )
CORS_ALLOW_HEADERS = ('origin', 'content-type', 'accept',
                      'Content-Type',
                      'Depth',
                      'User-Agent',
                      'X-File-Size',
                      'X-Requested-With',
                      'If-Modified-Since',
                      'X-File-Name',
                      'Cache-Control')
CORS_EXPOSE_HEADERS = ('text/html', 'application/xhtml+xml',
                       'application/xml', 'image/webp', '*/*')

# django-axes :
# AXES_COOLOFF_TIME defines a period of inactivity after which old failed
#                   login attempts will be forgotten. Can be set to a python
#                   timedelta object or an integer. If an integer, will be
#                   interpreted as a number of hours. Default: None
AXES_COOLOFF_TIME = datetime.timedelta(seconds=120)

LOGIN_URL = 'my_home_login'
# astuce vitale pour tout forcer en utf8 et plus rester en ascii
# reload(sys)
# sys.setdefaultencoding('utf8')

# SILENCED_SYSTEM_CHECKS = ["urls.E004"]